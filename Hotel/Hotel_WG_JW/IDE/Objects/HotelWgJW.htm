<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\HotelWgJW.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\HotelWgJW.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Wed Jul 20 16:35:42 2016
<BR><P>
<H3>Maximum Stack Usage =       1264 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; JwLockInit &rArr; ShellCmdRecv &rArr; ShellCmdParse &rArr; BleS02GlobalScan &rArr; BleS02WaitResp &rArr; __2printf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[1e]">ADC_A_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">ADC_A_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1e]">ADC_A_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[13]">ADC_B_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[20]">BOD_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[16]">CT16B0_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[17]">CT16B1_IRQHandler</a> from systimer.o(i.CT16B1_IRQHandler) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[18]">CT32B0_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[19]">CT32B1_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[21]">FLASH_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[25]">GPIO0_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[24]">GPIO1_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[23]">GPIO2_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[22]">GPIO3_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[15]">I2C_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[6]">PIO0_0_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[10]">PIO0_10_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[11]">PIO0_11_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[7]">PIO0_1_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[8]">PIO0_2_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[9]">PIO0_3_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[a]">PIO0_4_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[b]">PIO0_5_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[c]">PIO0_6_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[d]">PIO0_7_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[e]">PIO0_8_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[f]">PIO0_9_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[12]">PIO1_0_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[1a]">SSP0_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[14]">SSP1_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from systimer.o(i.SysTick_Handler) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_lpc112x.o(i.SystemInit) referenced from startup_lpc112x.o(.text)
 <LI><a href="#[1b]">UART0_IRQHandler</a> from rs485.o(i.UART0_IRQHandler) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[1c]">UART1_IRQHandler</a> from bles02.o(i.UART1_IRQHandler) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[1d]">UART2_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[1f]">WDT_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_lpc112x.o(.text)
 <LI><a href="#[2a]">_sbackspace</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[2b]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[29]">_sgetc</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[2e]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[2d]">fputc</a> from rs485.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[2c]">isspace</a> from isspace_c.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[26]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(.text)
</UL>
<P><STRONG><a name="[bb]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[48]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[bc]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[bd]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[be]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[bf]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[c0]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>ADC_A_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_A_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_A_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>ADC_B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>CT16B0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>CT32B0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>CT32B1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>GPIO0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>GPIO1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>GPIO2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>GPIO3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>I2C_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>PIO0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>PIO0_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>PIO0_11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PIO0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PIO0_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PIO0_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PIO0_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PIO0_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PIO0_6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PIO0_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>PIO0_8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>PIO0_9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>PIO1_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[c1]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[9d]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ct16b1_timer_init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5b]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02WaitResp
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Recv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDataParse
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDataCreate
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDealFirmwareUpdate
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameSend
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Recv
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockDealOpenRecord
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockDealLockStaInfo
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoReset
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoBleInfoSet
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoDefault
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoIDSet
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockSetTime
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02GlobalScan
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameRecv
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockInit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameRecv
</UL>

<P><STRONG><a name="[c2]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[c3]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[c4]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02WaitResp
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Recv
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Recv
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoBleInfoSet
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoDefault
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdRecv
</UL>

<P><STRONG><a name="[54]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDealFirmwareUpdate
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameSend
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02LinkWithMac
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockSetTime
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockOpen
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockGetSta
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockGetOpenRecord
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockClose
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Standby
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02LinkWithIndex
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02GlobalScan
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockRecv
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockInit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameRecv
</UL>

<P><STRONG><a name="[c5]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[59]"></a>strstr</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02GlobalScan
</UL>

<P><STRONG><a name="[6a]"></a>strchr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, strchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDealFirmwareUpdate
</UL>

<P><STRONG><a name="[56]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDealFirmwareUpdate
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02LinkWithMac
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoBleInfoSet
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Standby
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02LinkWithIndex
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02GlobalScan
</UL>

<P><STRONG><a name="[5a]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoBleIsNull
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02GlobalScan
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockRecv
</UL>

<P><STRONG><a name="[92]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoBleIsNull
</UL>

<P><STRONG><a name="[65]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDataParse
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDataCreate
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDealFirmwareUpdate
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameSend
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameRecv
</UL>

<P><STRONG><a name="[c6]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>__aeabi_uwrite4</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDataParse
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDealFirmwareUpdate
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameSend
</UL>

<P><STRONG><a name="[c8]"></a>__rt_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__0sscanf</STRONG> (Thumb, 50 bytes, Stack size 72 bytes, __0sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDealFirmwareUpdate
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
</UL>

<P><STRONG><a name="[36]"></a>_scanf_int</STRONG> (Thumb, 330 bytes, Stack size 48 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockDealLockStaInfo
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3c]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockDealLockStaInfo
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2uiz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[3f]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3e]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[ca]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>_chval</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>

<P><STRONG><a name="[35]"></a>__vfscanf_char</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[29]"></a>_sgetc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[2a]"></a>_sbackspace</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[cb]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[39]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[43]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[45]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[46]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[47]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[af]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[30]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[cc]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[cd]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[ce]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>isspace</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, isspace_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isspace
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ctype_lookup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[41]"></a>__vfscanf</STRONG> (Thumb, 812 bytes, Stack size 80 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_string (Weak Reference)
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real (Weak Reference)
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_longlong (Weak Reference)
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[49]"></a>__ctype_lookup</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ctype_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[97]"></a>BeepHandler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, beep.o(i.BeepHandler))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[4d]"></a>BeepInit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, beep.o(i.BeepInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BeepInit &rArr; BeepThreeRing
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_dir
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepThreeRing
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[96]"></a>BeepLongRing</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, beep.o(i.BeepLongRing))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoReset
</UL>

<P><STRONG><a name="[50]"></a>BeepThreeRing</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, beep.o(i.BeepThreeRing))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BeepThreeRing
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepInit
</UL>

<P><STRONG><a name="[53]"></a>BleS02GlobalScan</STRONG> (Thumb, 224 bytes, Stack size 536 bytes, bles02.o(i.BleS02GlobalScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = BleS02GlobalScan &rArr; BleS02WaitResp &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02WaitResp
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Send
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockInit
</UL>

<P><STRONG><a name="[98]"></a>BleS02Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bles02.o(i.BleS02Handler))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[5c]"></a>BleS02Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bles02.o(i.BleS02Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = BleS02Init &rArr; uart1_init &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5e]"></a>BleS02LinkWithIndex</STRONG> (Thumb, 80 bytes, Stack size 272 bytes, bles02.o(i.BleS02LinkWithIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = BleS02LinkWithIndex &rArr; BleS02WaitResp &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02WaitResp
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Send
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
</UL>

<P><STRONG><a name="[5f]"></a>BleS02LinkWithMac</STRONG> (Thumb, 88 bytes, Stack size 272 bytes, bles02.o(i.BleS02LinkWithMac))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = BleS02LinkWithMac &rArr; BleS02WaitResp &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02WaitResp
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Send
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockInit
</UL>

<P><STRONG><a name="[60]"></a>BleS02Recv</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, bles02.o(i.BleS02Recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BleS02Recv
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockRecv
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockInit
</UL>

<P><STRONG><a name="[57]"></a>BleS02Send</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, bles02.o(i.BleS02Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BleS02Send
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_byte
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02LinkWithMac
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockSetTime
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockOpen
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockGetSta
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockGetOpenRecord
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockClose
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Standby
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02LinkWithIndex
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02GlobalScan
</UL>

<P><STRONG><a name="[62]"></a>BleS02Standby</STRONG> (Thumb, 74 bytes, Stack size 272 bytes, bles02.o(i.BleS02Standby))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = BleS02Standby &rArr; BleS02WaitResp &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02WaitResp
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Send
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockInit
</UL>

<P><STRONG><a name="[58]"></a>BleS02WaitResp</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, bles02.o(i.BleS02WaitResp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BleS02WaitResp &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02LinkWithMac
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Standby
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02LinkWithIndex
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02GlobalScan
</UL>

<P><STRONG><a name="[17]"></a>CT16B1_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systimer.o(i.CT16B1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>FrameDataCreate</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, frame.o(i.FrameDataCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FrameDataCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameSend
</UL>

<P><STRONG><a name="[66]"></a>FrameDataParse</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, frame.o(i.FrameDataParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FrameDataParse &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDealFirmwareUpdate
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameRecv
</UL>

<P><STRONG><a name="[70]"></a>FrameRecv</STRONG> (Thumb, 182 bytes, Stack size 312 bytes, frame.o(i.FrameRecv))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = FrameRecv &rArr; FrameDealFirmwareUpdate &rArr; FrameSend &rArr; RS485Send
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Recv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDataParse
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDealFirmwareUpdate
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockSetTime
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockOpen
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockGetOpenRecord
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockClose
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>FrameSend</STRONG> (Thumb, 132 bytes, Stack size 312 bytes, frame.o(i.FrameSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = FrameSend &rArr; RS485Send
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Send
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDataCreate
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDealFirmwareUpdate
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockRecv
</UL>

<P><STRONG><a name="[72]"></a>JwLockClose</STRONG> (Thumb, 52 bytes, Stack size 72 bytes, jwlock.o(i.JwLockClose))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = JwLockClose &rArr; BleS02Send
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Send
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockHandler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameRecv
</UL>

<P><STRONG><a name="[73]"></a>JwLockGetOpenRecord</STRONG> (Thumb, 84 bytes, Stack size 80 bytes, jwlock.o(i.JwLockGetOpenRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = JwLockGetOpenRecord &rArr; BleS02Send
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Send
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameRecv
</UL>

<P><STRONG><a name="[79]"></a>JwLockGetSta</STRONG> (Thumb, 50 bytes, Stack size 72 bytes, jwlock.o(i.JwLockGetSta))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = JwLockGetSta &rArr; BleS02Send
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Send
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockInit
</UL>

<P><STRONG><a name="[7a]"></a>JwLockHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, jwlock.o(i.JwLockHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = JwLockHandler &rArr; JwLockClose &rArr; BleS02Send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockClose
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[7b]"></a>JwLockInit</STRONG> (Thumb, 296 bytes, Stack size 640 bytes, jwlock.o(i.JwLockInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1264<LI>Call Chain = JwLockInit &rArr; ShellCmdRecv &rArr; ShellCmdParse &rArr; BleS02GlobalScan &rArr; BleS02WaitResp &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Recv
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02LinkWithMac
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoRoomNumGet
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoBleIsNull
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoBleInfoSet
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockGetSta
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Standby
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02GlobalScan
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdRecv
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyMgrListened
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>JwLockOpen</STRONG> (Thumb, 54 bytes, Stack size 80 bytes, jwlock.o(i.JwLockOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = JwLockOpen &rArr; BleS02Send
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Send
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameRecv
</UL>

<P><STRONG><a name="[81]"></a>JwLockRecv</STRONG> (Thumb, 104 bytes, Stack size 280 bytes, jwlock.o(i.JwLockRecv))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = JwLockRecv &rArr; FrameSend &rArr; RS485Send
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameSend
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Recv
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockDealOpenRecord
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockDealLockStaInfo
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[74]"></a>JwLockSetTime</STRONG> (Thumb, 66 bytes, Stack size 80 bytes, jwlock.o(i.JwLockSetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = JwLockSetTime &rArr; BleS02Send
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Send
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameRecv
</UL>

<P><STRONG><a name="[82]"></a>KeyInit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, key.o(i.KeyInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = KeyInit &rArr; gpio_set_dir
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyMgrInit
</UL>

<P><STRONG><a name="[83]"></a>KeyMgrInit</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, keymgr.o(i.KeyMgrInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = KeyMgrInit &rArr; KeyInit &rArr; gpio_set_dir
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInit
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>KeyMgrListened</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, keymgr.o(i.KeyMgrListened))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = KeyMgrListened &rArr; SysInfoReset &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyStaSwitch
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoReset
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockInit
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>KeyScan</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, key.o(i.KeyScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KeyScan
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_bitval
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyMgrListened
</UL>

<P><STRONG><a name="[85]"></a>KeyStaSwitch</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, key.o(i.KeyStaSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = KeyStaSwitch
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTimerGet
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyMgrListened
</UL>

<P><STRONG><a name="[89]"></a>RS485Init</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, rs485.o(i.RS485Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = RS485Init &rArr; uart0_init &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_dir
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>RS485Recv</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, rs485.o(i.RS485Recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RS485Recv
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDealFirmwareUpdate
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameRecv
</UL>

<P><STRONG><a name="[76]"></a>RS485Send</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, rs485.o(i.RS485Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RS485Send
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_send_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameSend
</UL>

<P><STRONG><a name="[8c]"></a>ShellCmdParse</STRONG> (Thumb, 288 bytes, Stack size 16 bytes, shell.o(i.ShellCmdParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = ShellCmdParse &rArr; BleS02GlobalScan &rArr; BleS02WaitResp &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoRoomNumSet
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoIDSet
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockSetTime
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockOpen
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockGetSta
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockGetOpenRecord
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockClose
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Standby
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02LinkWithIndex
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02GlobalScan
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellShowHelp
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdRecv
</UL>

<P><STRONG><a name="[7e]"></a>ShellCmdRecv</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, shell.o(i.ShellCmdRecv))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = ShellCmdRecv &rArr; ShellCmdParse &rArr; BleS02GlobalScan &rArr; BleS02WaitResp &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockInit
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>SysInfoBleInfoSet</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, sysinfo.o(i.SysInfoBleInfoSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SysInfoBleInfoSet &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockInit
</UL>

<P><STRONG><a name="[7d]"></a>SysInfoBleIsNull</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, sysinfo.o(i.SysInfoBleIsNull))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SysInfoBleIsNull &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockInit
</UL>

<P><STRONG><a name="[8e]"></a>SysInfoIDSet</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sysinfo.o(i.SysInfoIDSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SysInfoIDSet &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
</UL>

<P><STRONG><a name="[94]"></a>SysInfoInit</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, sysinfo.o(i.SysInfoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SysInfoInit &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashReadData
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoDefault
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>SysInfoReset</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, sysinfo.o(i.SysInfoReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SysInfoReset &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepLongRing
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoDefault
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyMgrListened
</UL>

<P><STRONG><a name="[7c]"></a>SysInfoRoomNumGet</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sysinfo.o(i.SysInfoRoomNumGet))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockInit
</UL>

<P><STRONG><a name="[8f]"></a>SysInfoRoomNumSet</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, sysinfo.o(i.SysInfoRoomNumSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SysInfoRoomNumSet &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, systimer.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SysTick_Handler &rArr; JwLockHandler &rArr; JwLockClose &rArr; BleS02Send
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockHandler
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Handler
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>SysTimerGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, systimer.o(i.SysTimerGet))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyStaSwitch
</UL>

<P><STRONG><a name="[99]"></a>SysTimerInit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, systimer.o(i.SysTimerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SysTimerInit &rArr; ct16b1_timer_init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ct16b1_timer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9c]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, system_lpc112x.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, system_lpc112x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(.text)
</UL>
<P><STRONG><a name="[1b]"></a>UART0_IRQHandler</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, rs485.o(i.UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartIntDealShell
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsartIntDealRs485
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>UART1_IRQHandler</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, bles02.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02IntDealStandby
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02IntDealLink
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02IntDealGS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>UpdateInfoAppCodeErase</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, updateinfo.o(i.UpdateInfoAppCodeErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = UpdateInfoAppCodeErase &rArr; W25qFlashEraseSector &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDealFirmwareUpdate
</UL>

<P><STRONG><a name="[6e]"></a>UpdateInfoAppCodeSave</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, updateinfo.o(i.UpdateInfoAppCodeSave))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = UpdateInfoAppCodeSave &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDealFirmwareUpdate
</UL>

<P><STRONG><a name="[6f]"></a>UpdateInfoSet</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, updateinfo.o(i.UpdateInfoSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = UpdateInfoSet &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDealFirmwareUpdate
</UL>

<P><STRONG><a name="[90]"></a>W25qFlashEraseSector</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, w25qflash.o(i.W25qFlashEraseSector))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = W25qFlashEraseSector &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteControl
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWaitIdle
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashRWBytes
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoSet
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoAppCodeErase
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoReset
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoBleInfoSet
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoRoomNumSet
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoIDSet
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoInit
</UL>

<P><STRONG><a name="[a7]"></a>W25qFlashInit</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, w25qflash.o(i.W25qFlashInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = W25qFlashInit &rArr; W25qFlashReadID &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_dir
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashReadID
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a9]"></a>W25qFlashIsBusy</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, w25qflash.o(i.W25qFlashIsBusy))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashRWBytes
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWaitIdle
</UL>

<P><STRONG><a name="[95]"></a>W25qFlashReadData</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, w25qflash.o(i.W25qFlashReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = W25qFlashReadData &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWaitIdle
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashRWBytes
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoInit
</UL>

<P><STRONG><a name="[a8]"></a>W25qFlashReadID</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, w25qflash.o(i.W25qFlashReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = W25qFlashReadID &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashRWBytes
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashInit
</UL>

<P><STRONG><a name="[aa]"></a>W25qFlashWriteAPage</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, w25qflash.o(i.W25qFlashWriteAPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteControl
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWaitIdle
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashRWBytes
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
</UL>

<P><STRONG><a name="[91]"></a>W25qFlashWriteData</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, w25qflash.o(i.W25qFlashWriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteAPage
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoSet
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoAppCodeSave
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoReset
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoBleInfoSet
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoRoomNumSet
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoIDSet
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoInit
</UL>

<P><STRONG><a name="[ab]"></a>__0printf</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[cf]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[63]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02WaitResp
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDealFirmwareUpdate
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockDealOpenRecord
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockDealLockStaInfo
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellShowHelp
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoInit
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockInit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameRecv
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d0]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[d1]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[ad]"></a>__0sprintf</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[d2]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[55]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDealFirmwareUpdate
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02LinkWithMac
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Standby
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02LinkWithIndex
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02GlobalScan
</UL>

<P><STRONG><a name="[d3]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[d4]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[42]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[68]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, system_lpc112x.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDataParse
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameRecv
</UL>

<P><STRONG><a name="[d5]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[d6]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[d7]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[9b]"></a>ct16b1_timer_init</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, timer.o(i.ct16b1_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ct16b1_timer_init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTimerInit
</UL>

<P><STRONG><a name="[52]"></a>delay_ms</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, delay.o(i.delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02WaitResp
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepThreeRing
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Send
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDealFirmwareUpdate
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Send
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoReset
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockInit
</UL>

<P><STRONG><a name="[2d]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, rs485.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_send_byte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[87]"></a>gpio_get_bitval</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(i.gpio_get_bitval))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashRWBytes
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
</UL>

<P><STRONG><a name="[a5]"></a>gpio_set_bitval</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gpio.o(i.gpio_set_bitval))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_set_bitval
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteControl
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashRWBytes
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashReadData
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashInit
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteAPage
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashReadID
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashIsBusy
</UL>

<P><STRONG><a name="[4f]"></a>gpio_set_dir</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio.o(i.gpio_set_dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_set_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInit
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashInit
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepInit
</UL>

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1264<LI>Call Chain = main &rArr; JwLockInit &rArr; ShellCmdRecv &rArr; ShellCmdParse &rArr; BleS02GlobalScan &rArr; BleS02WaitResp &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashInit
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTimerInit
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoInit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdRecv
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyMgrListened
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyMgrInit
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockRecv
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockInit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameRecv
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepInit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[4e]"></a>syscon_ahb_enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, syscon.o(i.syscon_ahb_enable))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInit
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ct16b1_timer_init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashInit
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepInit
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[b8]"></a>syscon_pd_on</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, syscon.o(i.syscon_pd_on))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
</UL>

<P><STRONG><a name="[b5]"></a>syscon_uart0_div</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, syscon.o(i.syscon_uart0_div))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[b9]"></a>syscon_wdt_clk_update</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, syscon.o(i.syscon_wdt_clk_update))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
</UL>

<P><STRONG><a name="[ba]"></a>syscon_wdt_div</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, syscon.o(i.syscon_wdt_div))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
</UL>

<P><STRONG><a name="[b7]"></a>syscon_wdt_osc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, syscon.o(i.syscon_wdt_osc))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
</UL>

<P><STRONG><a name="[9a]"></a>systick_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, systick.o(i.systick_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = systick_init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTimerInit
</UL>

<P><STRONG><a name="[8a]"></a>uart0_init</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, uart.o(i.uart0_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = uart0_init &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_uart0_div
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Init
</UL>

<P><STRONG><a name="[8b]"></a>uart0_send_byte</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.uart0_send_byte))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Send
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[5d]"></a>uart1_init</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, uart.o(i.uart1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = uart1_init &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Init
</UL>

<P><STRONG><a name="[61]"></a>uart1_send_byte</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.uart1_send_byte))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02Send
</UL>

<P><STRONG><a name="[51]"></a>wdt_feed</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wdt.o(i.wdt_feed))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02WaitResp
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepThreeRing
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDealFirmwareUpdate
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleS02GlobalScan
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockInit
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b4]"></a>wdt_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, wdt.o(i.wdt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wdt_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_wdt_osc
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_wdt_div
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_wdt_clk_update
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_pd_on
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[8d]"></a>ShellShowHelp</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, shell.o(i.ShellShowHelp))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ShellShowHelp &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
</UL>

<P><STRONG><a name="[93]"></a>SysInfoDefault</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, sysinfo.o(i.SysInfoDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysInfoDefault
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoReset
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoInit
</UL>

<P><STRONG><a name="[77]"></a>JwLockDealLockStaInfo</STRONG> (Thumb, 134 bytes, Stack size 56 bytes, jwlock.o(i.JwLockDealLockStaInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = JwLockDealLockStaInfo &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockRecv
</UL>

<P><STRONG><a name="[78]"></a>JwLockDealOpenRecord</STRONG> (Thumb, 154 bytes, Stack size 96 bytes, jwlock.o(i.JwLockDealOpenRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = JwLockDealOpenRecord &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JwLockRecv
</UL>

<P><STRONG><a name="[69]"></a>FrameDealFirmwareUpdate</STRONG> (Thumb, 408 bytes, Stack size 224 bytes, frame.o(i.FrameDealFirmwareUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = FrameDealFirmwareUpdate &rArr; FrameSend &rArr; RS485Send
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoSet
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoAppCodeSave
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoAppCodeErase
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Recv
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameDataParse
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameSend
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameRecv
</UL>

<P><STRONG><a name="[a1]"></a>BleS02IntDealGS</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, bles02.o(i.BleS02IntDealGS))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[a2]"></a>BleS02IntDealLink</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, bles02.o(i.BleS02IntDealLink))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[a0]"></a>BleS02IntDealStandby</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, bles02.o(i.BleS02IntDealStandby))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[a6]"></a>W25qFlashRWBytes</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, w25qflash.o(i.W25qFlashRWBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_bitval
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteControl
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashReadData
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteAPage
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashReadID
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashIsBusy
</UL>

<P><STRONG><a name="[a3]"></a>W25qFlashWaitIdle</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, w25qflash.o(i.W25qFlashWaitIdle))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashIsBusy
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashReadData
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteAPage
</UL>

<P><STRONG><a name="[a4]"></a>W25qFlashWriteControl</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, w25qflash.o(i.W25qFlashWriteControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = W25qFlashWriteControl &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashRWBytes
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteAPage
</UL>

<P><STRONG><a name="[9f]"></a>UsartIntDealRs485</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rs485.o(i.UsartIntDealRs485))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[9e]"></a>UsartIntDealShell</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rs485.o(i.UsartIntDealShell))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[b6]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, uart.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[b2]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timer.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ct16b1_timer_init
</UL>

<P><STRONG><a name="[b3]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, timer.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ct16b1_timer_init
</UL>

<P><STRONG><a name="[ae]"></a>_fp_digits</STRONG> (Thumb, 316 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ac]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[b1]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[b0]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2e]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL>
<P><STRONG><a name="[2b]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[4b]"></a>_scanf_longlong</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[4a]"></a>_scanf_real</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[4c]"></a>_scanf_string</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<HR></body></html>
