<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\LockWGVoice.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\LockWGVoice.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Tue Jul 05 10:55:28 2016
<BR><P>
<H3>Maximum Stack Usage =       1516 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; NetWorkInit &rArr; NetWorkRecv &rArr; NetWorkDealHeartRspData &rArr; NetWorkDealAppUpdate &rArr; NetWorkSendWarn &rArr; NetWorkCreateLink &rArr; NetWorkGetLinkInfo &rArr; WifiGetTCPLinkStatus &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[1e]">ADC_A_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">ADC_A_IRQHandler</a><BR>
 <LI><a href="#[11d]">print_object</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[113]">print_value</a><BR>
 <LI><a href="#[11a]">print_array</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[113]">print_value</a><BR>
 <LI><a href="#[c7]">cJSON_Delete</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c7]">cJSON_Delete</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1e]">ADC_A_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[13]">ADC_B_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[20]">BOD_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[16]">CT16B0_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[17]">CT16B1_IRQHandler</a> from systimer.o(i.CT16B1_IRQHandler) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[18]">CT32B0_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[19]">CT32B1_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[21]">FLASH_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[25]">GPIO0_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[24]">GPIO1_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[23]">GPIO2_IRQHandler</a> from doormagnet.o(i.GPIO2_IRQHandler) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[22]">GPIO3_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from main.o(i.HardFault_Handler) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[15]">I2C_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[6]">PIO0_0_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[10]">PIO0_10_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[11]">PIO0_11_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[7]">PIO0_1_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[8]">PIO0_2_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[9]">PIO0_3_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[a]">PIO0_4_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[b]">PIO0_5_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[c]">PIO0_6_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[d]">PIO0_7_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[e]">PIO0_8_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[f]">PIO0_9_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[12]">PIO1_0_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[1a]">SSP0_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[14]">SSP1_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from systimer.o(i.SysTick_Handler) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_lpc112x.o(i.SystemInit) referenced from startup_lpc112x.o(.text)
 <LI><a href="#[1b]">UART0_IRQHandler</a> from shell.o(i.UART0_IRQHandler) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[1c]">UART1_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[1d]">UART2_IRQHandler</a> from wifi.o(i.UART2_IRQHandler) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[1f]">WDT_IRQHandler</a> from startup_lpc112x.o(.text) referenced from startup_lpc112x.o(RESET)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_lpc112x.o(.text)
 <LI><a href="#[2a]">_sbackspace</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[2b]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[29]">_sgetc</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[2e]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[2d]">fputc</a> from main.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[30]">free</a> from malloc.o(i.free) referenced from json.o(.data)
 <LI><a href="#[2c]">isspace</a> from isspace_o.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[26]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[2f]">malloc</a> from malloc.o(i.malloc) referenced from json.o(.data)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(.text)
</UL>
<P><STRONG><a name="[125]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[31]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[50]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[126]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[127]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[128]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[129]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[12a]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>ADC_A_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_A_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_A_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>ADC_B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>CT16B0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>CT32B0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>CT32B1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>GPIO0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>GPIO1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>GPIO3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>I2C_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>PIO0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>PIO0_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>PIO0_11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PIO0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PIO0_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PIO0_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PIO0_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PIO0_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PIO0_6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PIO0_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>PIO0_8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>PIO0_9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>PIO1_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc112x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[12b]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[8f]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PirCheck
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCheckHeart
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_init
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ct16b1_timer_init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[81]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInfoSplitNameAndPwd
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_strdup
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoSetVersion
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Recv
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiIntDealSmartLink
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiIntDealNetData
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiIntDealAtRspData
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Send
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoLockIDSave
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoDefault
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoGetSystemID
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoIDSave
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiRecv
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiRectNetData
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetTCPLinkStatus
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetSmartLink
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetRssiAndMac
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetIP
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoWifiSave
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoWifiGet
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoPwdSave
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoMcSave
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoMcGet
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoIDGet
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkGetLinkInfo
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDataCreate
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCtlTypeParse
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetAp
</UL>

<P><STRONG><a name="[12c]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[12d]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[12e]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[12f]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInfoSplitNameAndPwd
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoSetVersion
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdRecv
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiIntDealSmartLink
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiIntDealNetData
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiIntDealAtRspData
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoDefault
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoIDSave
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiRecv
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiRectNetData
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetSmartLink
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoWifiSave
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSend
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDataParse
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDataCreate
</UL>

<P><STRONG><a name="[7f]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInfoSplitNameAndPwd
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkWarnDataCreate
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkWaitWifiJoin
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkUpdateDataCreate
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkReportNetInfo
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkLoginDataCreate
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealHeartRspData
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_object
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_array
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_New_Item
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiResetModule
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendHeart
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Recv
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellShowHelp
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetMutexLink
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSendTCPData
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiOpenSmartLink
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiJoinAp
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetTCPLinkStatus
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetSmartLink
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetRssiAndMac
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetIP
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiCreateTCPLink
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiCloseTCPLink
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendWarn
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkLogin
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkGetLinkInfo
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCtlTypeParse
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetMode
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiIsMutexLink
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetAp
</UL>

<P><STRONG><a name="[130]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[be]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkWarnDataCreate
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkUpdateDataCreate
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkLoginDataCreate
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellShowHelp
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetSmartLink
</UL>

<P><STRONG><a name="[a1]"></a>strstr</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetTCPLinkStatus
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetSmartLink
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
</UL>

<P><STRONG><a name="[96]"></a>strchr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, strchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInfoSplitNameAndPwd
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_string_ptr
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiRectNetData
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetTCPLinkStatus
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetSmartLink
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetRssiAndMac
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetIP
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkGetLinkInfo
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCtlTypeParse
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiIsMutexLink
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetAp
</UL>

<P><STRONG><a name="[99]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInfoSplitNameAndPwd
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_object
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_array
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_strdup
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiResetModule
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoSetVersion
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdRecv
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoIDSave
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SheelDealID
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetMutexLink
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSendTCPData
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiOpenSmartLink
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiJoinAp
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetTCPLinkStatus
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetRssiAndMac
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetIP
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiCreateTCPLink
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiCloseTCPLink
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoWifiSave
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoWifiGet
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoPwdSave
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoIDGet
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDataCreate
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetMode
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiIsMutexLink
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetAp
</UL>

<P><STRONG><a name="[e4]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoCheckDevID
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiJoinAp
</UL>

<P><STRONG><a name="[97]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoLockIDIsNull
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoLockIDIsAssoc
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SheelDealID
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiRecv
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiRectNetData
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoWifiIsNull
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCtlTypeParse
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetAp
</UL>

<P><STRONG><a name="[e0]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInfoSplitNameAndPwd
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_object
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_array
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellShowHelp
</UL>

<P><STRONG><a name="[82]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealHeartRspData
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoInit
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PirCheck
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendHeart
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCheckHeart
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Recv
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Send
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoLockSnrGet
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSwapServerPort
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendWarn
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSend
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkLogin
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkHandler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDataCreate
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCtlTypeParse
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCreateLink
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCloseLink
</UL>

<P><STRONG><a name="[131]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[132]"></a>_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>__aeabi_uwrite4</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealHeartRspData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendHeart
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCheckHeart
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Send
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoLock315SnrSave
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoDefault
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSwapServerPort
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkHandler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkGetLinkInfo
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDataParse
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDataCreate
</UL>

<P><STRONG><a name="[133]"></a>__rt_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[134]"></a>_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>__0sscanf</STRONG> (Thumb, 50 bytes, Stack size 72 bytes, __0sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCtlTypeParse
</UL>

<P><STRONG><a name="[38]"></a>_scanf_int</STRONG> (Thumb, 330 bytes, Stack size 48 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[3a]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealHeartRspData
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkGetLinkInfo
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
</UL>

<P><STRONG><a name="[42]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_number
</UL>

<P><STRONG><a name="[43]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
</UL>

<P><STRONG><a name="[44]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[45]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[46]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_number
</UL>

<P><STRONG><a name="[47]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
</UL>

<P><STRONG><a name="[48]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2uiz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
</UL>

<P><STRONG><a name="[135]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[11c]"></a>__aeabi_cdcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_number
</UL>

<P><STRONG><a name="[10d]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_number
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
</UL>

<P><STRONG><a name="[4a]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[3e]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[136]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[49]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[137]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[138]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>_chval</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[37]"></a>__vfscanf_char</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[29]"></a>_sgetc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[2a]"></a>_sbackspace</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[3c]"></a>strtol</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[139]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[40]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>

<P><STRONG><a name="[4f]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[32]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[13a]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[2c]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace_o.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isspace
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[4b]"></a>__vfscanf</STRONG> (Thumb, 812 bytes, Stack size 80 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_string (Weak Reference)
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real (Weak Reference)
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_longlong (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[4d]"></a>_strtoul</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[d1]"></a>CRC16</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, crc.o(i.CRC16))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfRx
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfTxDataIncode
</UL>

<P><STRONG><a name="[17]"></a>CT16B1_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, systimer.o(i.CT16B1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CT16B1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoorMagnetHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>DoorMagnetHandler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, doormagnet.o(i.DoorMagnetHandler))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT16B1_IRQHandler
</UL>

<P><STRONG><a name="[55]"></a>DoorMagnetInit</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, doormagnet.o(i.DoorMagnetInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DoorMagnetInit &rArr; gpio_set_interrupt &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_interrupt
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_dir
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_enable_interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ea]"></a>DoorMagnetMsHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, doormagnet.o(i.DoorMagnetMsHandler))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[5a]"></a>DoorMagnetRecv</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, doormagnet.o(i.DoorMagnetRecv))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = DoorMagnetRecv &rArr; NetWorkSendWarn &rArr; NetWorkCreateLink &rArr; NetWorkGetLinkInfo &rArr; WifiGetTCPLinkStatus &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_bitval
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf433Get
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoSetRf433Data
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoGetRf433Data
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoBfGet
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Warn
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendWarn
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23]"></a>GPIO2_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, doormagnet.o(i.GPIO2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_intstatus
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_clear_interrupt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>GetRecCode</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, rftx_open.o(i.GetRecCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GetRecCode &rArr; SysInfoPwdGet
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoPwdGet
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfRx
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfTxDataIncode
</UL>

<P><STRONG><a name="[d6]"></a>GetTxBit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, rftx_open.o(i.GetTxBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetTxBit
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfTx
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(i.HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HardFault_Handler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>KeyInit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, key.o(i.KeyInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = KeyInit &rArr; gpio_set_dir
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a]"></a>KeyListened</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, key.o(i.KeyListened))
<BR><BR>[Stack]<UL><LI>Max Depth = 812<LI>Call Chain = KeyListened &rArr; SystemReset &rArr; NetWorkSendWarn &rArr; NetWorkCreateLink &rArr; NetWorkGetLinkInfo &rArr; WifiGetTCPLinkStatus &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyStaSwitch
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Assoc
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkWaitWifiJoin
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoCheckDevID
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b]"></a>KeyScan</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, key.o(i.KeyScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KeyScan
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_bitval
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyListened
</UL>

<P><STRONG><a name="[6c]"></a>KeyStaSwitch</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, key.o(i.KeyStaSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = KeyStaSwitch &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTimerGet
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTimerCalc
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyListened
</UL>

<P><STRONG><a name="[72]"></a>LEDClose</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, led.o(i.LEDClose))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LEDClose &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDHandler
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOpen
</UL>

<P><STRONG><a name="[74]"></a>LEDHandler</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, led.o(i.LEDHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LEDHandler &rArr; LEDClose &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDClose
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[75]"></a>LEDInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, led.o(i.LEDInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LEDInit &rArr; LEDOpen &rArr; LEDClose &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_dir
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>LEDOpen</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, led.o(i.LEDOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LEDOpen &rArr; LEDClose &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDClose
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PirCheck
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCheckHeart
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Recv
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDInit
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Send
</UL>

<P><STRONG><a name="[6e]"></a>Lock315Assoc</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lock315.o(i.Lock315Assoc))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Lock315Assoc &rArr; Lock315Send &rArr; SysInfoLock315SnrSave &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Send
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealHeartRspData
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyListened
</UL>

<P><STRONG><a name="[78]"></a>Lock315Close</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lock315.o(i.Lock315Close))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Lock315Close &rArr; Lock315Send &rArr; SysInfoLock315SnrSave &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Send
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealHeartRspData
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
</UL>

<P><STRONG><a name="[79]"></a>Lock315Init</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, lock315.o(i.Lock315Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Lock315Init &rArr; SysInfoIDGet
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_dir
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoLockSnrGet
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoIDGet
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>Lock315Open</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lock315.o(i.Lock315Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Lock315Open &rArr; Lock315Send &rArr; SysInfoLock315SnrSave &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Send
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealHeartRspData
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
</UL>

<P><STRONG><a name="[7e]"></a>Lock315Recv</STRONG> (Thumb, 324 bytes, Stack size 88 bytes, lock315.o(i.Lock315Recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 892<LI>Call Chain = Lock315Recv &rArr; NetWorkSendWarn &rArr; NetWorkCreateLink &rArr; NetWorkGetLinkInfo &rArr; WifiGetTCPLinkStatus &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588DStartPlay
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfRx
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoLockIDSave
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoLockIDIsAssoc
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOpen
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendWarn
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>Lock315Send</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lock315.o(i.Lock315Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Lock315Send &rArr; SysInfoLock315SnrSave &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfTx
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoLock315SnrSave
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOpen
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315WarnCancel
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Warn
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Open
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Close
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Assoc
</UL>

<P><STRONG><a name="[5c]"></a>Lock315Warn</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lock315.o(i.Lock315Warn))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Lock315Warn &rArr; Lock315Send &rArr; SysInfoLock315SnrSave &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Send
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealHeartRspData
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoorMagnetRecv
</UL>

<P><STRONG><a name="[89]"></a>Lock315WarnCancel</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lock315.o(i.Lock315WarnCancel))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Lock315WarnCancel &rArr; Lock315Send &rArr; SysInfoLock315SnrSave &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Send
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealHeartRspData
</UL>

<P><STRONG><a name="[ec]"></a>LockHandler</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, lock315.o(i.LockHandler))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[d3]"></a>MemCmp</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, memory.o(i.MemCmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = MemCmp
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfRx
</UL>

<P><STRONG><a name="[d2]"></a>MemCopy</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, memory.o(i.MemCopy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MemCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfRx
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfTxDataIncode
</UL>

<P><STRONG><a name="[8a]"></a>NetWorkCheckHeart</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, network.o(i.NetWorkCheckHeart))
<BR><BR>[Stack]<UL><LI>Max Depth = 676<LI>Call Chain = NetWorkCheckHeart &rArr; NetWorkCloseLink &rArr; NetWorkGetLinkInfo &rArr; WifiGetTCPLinkStatus &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiResetModule
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOpen
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSwapServerPort
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkIsRspSuccess
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCloseLink
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>NetWorkCloseLink</STRONG> (Thumb, 40 bytes, Stack size 40 bytes, network.o(i.NetWorkCloseLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = NetWorkCloseLink &rArr; NetWorkGetLinkInfo &rArr; WifiGetTCPLinkStatus &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiCloseTCPLink
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkGetLinkInfo
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkRecv
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCheckHeart
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
</UL>

<P><STRONG><a name="[c0]"></a>NetWorkClrRspType</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, network.o(i.NetWorkClrRspType))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkRecv
</UL>

<P><STRONG><a name="[93]"></a>NetWorkCreateLink</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, network.o(i.NetWorkCreateLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 628<LI>Call Chain = NetWorkCreateLink &rArr; NetWorkGetLinkInfo &rArr; WifiGetTCPLinkStatus &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiCreateTCPLink
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkGetLinkInfo
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendHeart
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendWarn
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkLogin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
</UL>

<P><STRONG><a name="[95]"></a>NetWorkCtlTypeParse</STRONG> (Thumb, 150 bytes, Stack size 56 bytes, network.o(i.NetWorkCtlTypeParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = NetWorkCtlTypeParse &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealHeartRspData
</UL>

<P><STRONG><a name="[98]"></a>NetWorkDataCreate</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, network.o(i.NetWorkDataCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = NetWorkDataCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendHeart
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendWarn
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkLogin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
</UL>

<P><STRONG><a name="[9a]"></a>NetWorkDataParse</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, network.o(i.NetWorkDataParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = NetWorkDataParse &rArr; WifiRectNetData &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiRectNetData
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkRecv
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
</UL>

<P><STRONG><a name="[9c]"></a>NetWorkDealAppUpdate</STRONG> (Thumb, 480 bytes, Stack size 408 bytes, network.o(i.NetWorkDealAppUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 1212<LI>Call Chain = NetWorkDealAppUpdate &rArr; NetWorkSendWarn &rArr; NetWorkCreateLink &rArr; NetWorkGetLinkInfo &rArr; WifiGetTCPLinkStatus &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkUpdateDataCreate
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoSet
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoAppCodeSave
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoAppCodeErase
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendWarn
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSend
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDataParse
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDataCreate
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCreateLink
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCloseLink
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealHeartRspData
</UL>

<P><STRONG><a name="[91]"></a>NetWorkGetLinkInfo</STRONG> (Thumb, 158 bytes, Stack size 280 bytes, network.o(i.NetWorkGetLinkInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = NetWorkGetLinkInfo &rArr; WifiGetTCPLinkStatus &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetTCPLinkStatus
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCreateLink
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCloseLink
</UL>

<P><STRONG><a name="[ac]"></a>NetWorkHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, network.o(i.NetWorkHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NetWorkHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[ad]"></a>NetWorkInit</STRONG> (Thumb, 324 bytes, Stack size 216 bytes, network.o(i.NetWorkInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1516<LI>Call Chain = NetWorkInit &rArr; NetWorkRecv &rArr; NetWorkDealHeartRspData &rArr; NetWorkDealAppUpdate &rArr; NetWorkSendWarn &rArr; NetWorkCreateLink &rArr; NetWorkGetLinkInfo &rArr; WifiGetTCPLinkStatus &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInfoSplitNameAndPwd
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkWaitWifiJoin
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkReportNetInfo
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiResetModule
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588DStartPlay
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdRecv
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkRecv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyListened
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetMutexLink
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiOpenSmartLink
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiJoinAp
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetSmartLink
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoWifiSave
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoWifiIsNull
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoWifiGet
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOpen
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSwapServerPort
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkReportResetFlag
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkLogin
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkIsRspSuccess
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>NetWorkIsRspSuccess</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, network.o(i.NetWorkIsRspSuccess))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCheckHeart
</UL>

<P><STRONG><a name="[b9]"></a>NetWorkLogin</STRONG> (Thumb, 80 bytes, Stack size 168 bytes, network.o(i.NetWorkLogin))
<BR><BR>[Stack]<UL><LI>Max Depth = 796<LI>Call Chain = NetWorkLogin &rArr; NetWorkCreateLink &rArr; NetWorkGetLinkInfo &rArr; WifiGetTCPLinkStatus &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkLoginDataCreate
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSetRspType
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSend
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDataCreate
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCreateLink
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
</UL>

<P><STRONG><a name="[ba]"></a>NetWorkRecv</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, network.o(i.NetWorkRecv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1300<LI>Call Chain = NetWorkRecv &rArr; NetWorkDealHeartRspData &rArr; NetWorkDealAppUpdate &rArr; NetWorkSendWarn &rArr; NetWorkCreateLink &rArr; NetWorkGetLinkInfo &rArr; WifiGetTCPLinkStatus &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealHeartRspData
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDataParse
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkClrRspType
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCloseLink
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b8]"></a>NetWorkReportResetFlag</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, network.o(i.NetWorkReportResetFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 812<LI>Call Chain = NetWorkReportResetFlag &rArr; NetWorkSendWarn &rArr; NetWorkCreateLink &rArr; NetWorkGetLinkInfo &rArr; WifiGetTCPLinkStatus &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoGetResetFlag
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoClrResetFlag
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendWarn
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
</UL>

<P><STRONG><a name="[a0]"></a>NetWorkSend</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, network.o(i.NetWorkSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = NetWorkSend &rArr; WifiSendTCPData &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSendTCPData
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendHeart
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendWarn
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkLogin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
</UL>

<P><STRONG><a name="[cb]"></a>NetWorkSendHeart</STRONG> (Thumb, 160 bytes, Stack size 88 bytes, network.o(i.NetWorkSendHeart))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = NetWorkSendHeart &rArr; NetWorkCreateLink &rArr; NetWorkGetLinkInfo &rArr; WifiGetTCPLinkStatus &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoIDGet
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSetRspType
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSend
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDataCreate
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCreateLink
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5d]"></a>NetWorkSendWarn</STRONG> (Thumb, 114 bytes, Stack size 176 bytes, network.o(i.NetWorkSendWarn))
<BR><BR>[Stack]<UL><LI>Max Depth = 804<LI>Call Chain = NetWorkSendWarn &rArr; NetWorkCreateLink &rArr; NetWorkGetLinkInfo &rArr; WifiGetTCPLinkStatus &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkWarnDataCreate
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSend
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDataCreate
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCreateLink
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkReportNetInfo
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PirCheck
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Recv
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoorMagnetRecv
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkReportResetFlag
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
</UL>

<P><STRONG><a name="[bd]"></a>NetWorkSetRspType</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, network.o(i.NetWorkSetRspType))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendHeart
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkLogin
</UL>

<P><STRONG><a name="[90]"></a>NetWorkSwapServerPort</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, network.o(i.NetWorkSwapServerPort))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NetWorkSwapServerPort
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCheckHeart
</UL>

<P><STRONG><a name="[ce]"></a>PirCheck</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, pir.o(i.PirCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 836<LI>Call Chain = PirCheck &rArr; NetWorkSendWarn &rArr; NetWorkCreateLink &rArr; NetWorkGetLinkInfo &rArr; WifiGetTCPLinkStatus &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_bitval
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoMcGet
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOpen
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendWarn
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[eb]"></a>PirHandler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, pir.o(i.PirHandler))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[cf]"></a>PirInit</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, pir.o(i.PirInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PirInit &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d8]"></a>RF_ClrTimerFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rf_time.o(i.RF_ClrTimerFlag))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfTx
</UL>

<P><STRONG><a name="[d9]"></a>RF_GetTimerFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rf_time.o(i.RF_GetTimerFlag))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfTx
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RxBit
</UL>

<P><STRONG><a name="[d7]"></a>RF_TimerOff</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rf_time.o(i.RF_TimerOff))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfTx
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RxBit
</UL>

<P><STRONG><a name="[d5]"></a>RF_TimerOn</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, rf_time.o(i.RF_TimerOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RF_TimerOn
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfTx
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RxBit
</UL>

<P><STRONG><a name="[80]"></a>RfRx</STRONG> (Thumb, 328 bytes, Stack size 144 bytes, rfrx_open.o(i.RfRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = RfRx &rArr; RxBit &rArr; RF_TimerOn
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCmp
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecCode
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RxBit
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Recv
</UL>

<P><STRONG><a name="[87]"></a>RfTx</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, rftx_open.o(i.RfTx))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = RfTx &rArr; RfTxDataIncode &rArr; GetRecCode &rArr; SysInfoPwdGet
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TimerOn
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TimerOff
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_GetTimerFlag
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_ClrTimerFlag
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfTxDataIncode
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTxBit
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Send
</UL>

<P><STRONG><a name="[d4]"></a>RfTxDataIncode</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, rftx_open.o(i.RfTxDataIncode))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = RfTxDataIncode &rArr; GetRecCode &rArr; SysInfoPwdGet
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecCode
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfTx
</UL>

<P><STRONG><a name="[d0]"></a>RxBit</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, rfrx_open.o(i.RxBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RxBit &rArr; RF_TimerOn
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_bitval
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TimerOn
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TimerOff
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_GetTimerFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfRx
</UL>

<P><STRONG><a name="[dd]"></a>ShellCmdParse</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, shell.o(i.ShellCmdParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 1072<LI>Call Chain = ShellCmdParse &rArr; ShellShowHelp &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588DStartPlay
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588DStopPlay
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellShowHelp
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SheelDealID
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoReset
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Open
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Close
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdRecv
</UL>

<P><STRONG><a name="[b1]"></a>ShellCmdRecv</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, shell.o(i.ShellCmdRecv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1080<LI>Call Chain = ShellCmdRecv &rArr; ShellCmdParse &rArr; ShellShowHelp &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkWaitWifiJoin
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoCheckDevID
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>SysInfoBfGet</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sysinfo.o(i.SysInfoBfGet))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoorMagnetRecv
</UL>

<P><STRONG><a name="[a6]"></a>SysInfoBfSave</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sysinfo.o(i.SysInfoBfSave))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SysInfoBfSave &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealHeartRspData
</UL>

<P><STRONG><a name="[e3]"></a>SysInfoCheckDevID</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, sysinfo.o(i.SysInfoCheckDevID))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088<LI>Call Chain = SysInfoCheckDevID &rArr; ShellCmdRecv &rArr; ShellCmdParse &rArr; ShellShowHelp &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdRecv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyListened
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c9]"></a>SysInfoClrResetFlag</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, sysinfo.o(i.SysInfoClrResetFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SysInfoClrResetFlag &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkReportResetFlag
</UL>

<P><STRONG><a name="[e5]"></a>SysInfoDefault</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, sysinfo.o(i.SysInfoDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SysInfoDefault &rArr; SysInfoGetSystemID &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoGetSystemID
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoInit
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoReset
</UL>

<P><STRONG><a name="[c8]"></a>SysInfoGetResetFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysinfo.o(i.SysInfoGetResetFlag))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkReportResetFlag
</UL>

<P><STRONG><a name="[60]"></a>SysInfoGetRf433Data</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysinfo.o(i.SysInfoGetRf433Data))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoorMagnetRecv
</UL>

<P><STRONG><a name="[7a]"></a>SysInfoIDGet</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, sysinfo.o(i.SysInfoIDGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysInfoIDGet
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkWarnDataCreate
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkLoginDataCreate
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendHeart
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Init
</UL>

<P><STRONG><a name="[db]"></a>SysInfoIDSave</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, sysinfo.o(i.SysInfoIDSave))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SysInfoIDSave &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SheelDealID
</UL>

<P><STRONG><a name="[e8]"></a>SysInfoInit</STRONG> (Thumb, 200 bytes, Stack size 152 bytes, sysinfo.o(i.SysInfoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = SysInfoInit &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashReadData
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoDefault
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoGetSystemID
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoGet
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>SysInfoLock315SnrSave</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, sysinfo.o(i.SysInfoLock315SnrSave))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SysInfoLock315SnrSave &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Send
</UL>

<P><STRONG><a name="[85]"></a>SysInfoLockIDIsAssoc</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, sysinfo.o(i.SysInfoLockIDIsAssoc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SysInfoLockIDIsAssoc &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Recv
</UL>

<P><STRONG><a name="[a5]"></a>SysInfoLockIDIsNull</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sysinfo.o(i.SysInfoLockIDIsNull))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SysInfoLockIDIsNull &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkLoginDataCreate
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealHeartRspData
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>SysInfoLockIDSave</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sysinfo.o(i.SysInfoLockIDSave))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SysInfoLockIDSave &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Recv
</UL>

<P><STRONG><a name="[7b]"></a>SysInfoLockSnrGet</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sysinfo.o(i.SysInfoLockSnrGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysInfoLockSnrGet
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Init
</UL>

<P><STRONG><a name="[a7]"></a>SysInfoMcGet</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sysinfo.o(i.SysInfoMcGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysInfoMcGet
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealHeartRspData
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PirCheck
</UL>

<P><STRONG><a name="[a8]"></a>SysInfoMcSave</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, sysinfo.o(i.SysInfoMcSave))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SysInfoMcSave &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealHeartRspData
</UL>

<P><STRONG><a name="[65]"></a>SysInfoPwdGet</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, sysinfo.o(i.SysInfoPwdGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysInfoPwdGet
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecCode
</UL>

<P><STRONG><a name="[a9]"></a>SysInfoPwdSave</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, sysinfo.o(i.SysInfoPwdSave))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SysInfoPwdSave &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealHeartRspData
</UL>

<P><STRONG><a name="[aa]"></a>SysInfoReset</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sysinfo.o(i.SysInfoReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SysInfoReset &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealHeartRspData
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
</UL>

<P><STRONG><a name="[61]"></a>SysInfoSetRf433Data</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sysinfo.o(i.SysInfoSetRf433Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SysInfoSetRf433Data &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoorMagnetRecv
</UL>

<P><STRONG><a name="[ae]"></a>SysInfoWifiGet</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, sysinfo.o(i.SysInfoWifiGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysInfoWifiGet
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkReportNetInfo
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
</UL>

<P><STRONG><a name="[af]"></a>SysInfoWifiIsNull</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, sysinfo.o(i.SysInfoWifiIsNull))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SysInfoWifiIsNull &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
</UL>

<P><STRONG><a name="[b3]"></a>SysInfoWifiSave</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, sysinfo.o(i.SysInfoWifiSave))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SysInfoWifiSave &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, systimer.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SysTick_Handler &rArr; LEDHandler &rArr; LEDClose &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PirHandler
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LockHandler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDHandler
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoorMagnetMsHandler
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemResetHandler
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>SysTimerCalc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, systimer.o(i.SysTimerCalc))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyStaSwitch
</UL>

<P><STRONG><a name="[70]"></a>SysTimerGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, systimer.o(i.SysTimerGet))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyStaSwitch
</UL>

<P><STRONG><a name="[ee]"></a>SysTimerInit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, systimer.o(i.SysTimerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SysTimerInit &rArr; ct16b1_timer_init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_init
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ct16b1_timer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f1]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, system_lpc112x.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, system_lpc112x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(.text)
</UL>
<P><STRONG><a name="[6d]"></a>SystemReset</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, sysinfo.o(i.SystemReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 804<LI>Call Chain = SystemReset &rArr; NetWorkSendWarn &rArr; NetWorkCreateLink &rArr; NetWorkGetLinkInfo &rArr; WifiGetTCPLinkStatus &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588DStartPlay
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoReset
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendWarn
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyListened
</UL>

<P><STRONG><a name="[ed]"></a>SystemResetHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sysinfo.o(i.SystemResetHandler))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[1b]"></a>UART0_IRQHandler</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, shell.o(i.UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>UART2_IRQHandler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, wifi.o(i.UART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART2_IRQHandler &rArr; WifiIntDealNetData
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiIntDealSmartLink
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiIntDealNetData
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiIntDealAtRspData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc112x.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>UpdateInfoAppCodeErase</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, updateinfo.o(i.UpdateInfoAppCodeErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = UpdateInfoAppCodeErase &rArr; W25qFlashEraseSector &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
</UL>

<P><STRONG><a name="[a2]"></a>UpdateInfoAppCodeSave</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, updateinfo.o(i.UpdateInfoAppCodeSave))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = UpdateInfoAppCodeSave &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
</UL>

<P><STRONG><a name="[bf]"></a>UpdateInfoGet</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, updateinfo.o(i.UpdateInfoGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = UpdateInfoGet &rArr; W25qFlashReadData &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkLoginDataCreate
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoInit
</UL>

<P><STRONG><a name="[a3]"></a>UpdateInfoSet</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, updateinfo.o(i.UpdateInfoSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = UpdateInfoSet &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoSetVersion
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
</UL>

<P><STRONG><a name="[f5]"></a>UpdateInfoSetVersion</STRONG> (Thumb, 88 bytes, Stack size 160 bytes, updateinfo.o(i.UpdateInfoSetVersion))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = UpdateInfoSetVersion &rArr; UpdateInfoSet &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashReadData
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoSet
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e1]"></a>W25qFlashEraseSector</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, w25qflash.o(i.W25qFlashEraseSector))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = W25qFlashEraseSector &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteControl
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWaitIdle
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashRWBytes
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoInit
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoSetRf433Data
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoLockIDSave
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoLock315SnrSave
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoIDSave
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoSet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoAppCodeErase
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoWifiSave
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoReset
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoPwdSave
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoMcSave
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoClrResetFlag
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoBfSave
</UL>

<P><STRONG><a name="[f9]"></a>W25qFlashInit</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, w25qflash.o(i.W25qFlashInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = W25qFlashInit &rArr; W25qFlashReadID &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashReadID
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fb]"></a>W25qFlashIsBusy</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, w25qflash.o(i.W25qFlashIsBusy))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashRWBytes
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWaitIdle
</UL>

<P><STRONG><a name="[e9]"></a>W25qFlashReadData</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, w25qflash.o(i.W25qFlashReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = W25qFlashReadData &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWaitIdle
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashRWBytes
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoSetVersion
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoInit
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoGet
</UL>

<P><STRONG><a name="[fa]"></a>W25qFlashReadID</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, w25qflash.o(i.W25qFlashReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = W25qFlashReadID &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashRWBytes
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashInit
</UL>

<P><STRONG><a name="[fc]"></a>W25qFlashWriteAPage</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, w25qflash.o(i.W25qFlashWriteAPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteControl
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWaitIdle
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashRWBytes
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteData
</UL>

<P><STRONG><a name="[e2]"></a>W25qFlashWriteData</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, w25qflash.o(i.W25qFlashWriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteAPage
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoInit
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoSetRf433Data
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoLockIDSave
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoLock315SnrSave
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoIDSave
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoSet
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoAppCodeSave
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoWifiSave
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoReset
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoPwdSave
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoMcSave
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoClrResetFlag
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoBfSave
</UL>

<P><STRONG><a name="[fd]"></a>WT588DInit</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, wt588d.o(i.WT588DInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WT588DInit &rArr; WT588DSendByte &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_dir
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588DSendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fe]"></a>WT588DSendByte</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, wt588d.o(i.WT588DSendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WT588DSendByte &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588DDelay600us
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588DDelay200us
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588DStartPlay
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588DInit
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588DStopPlay
</UL>

<P><STRONG><a name="[83]"></a>WT588DStartPlay</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, wt588d.o(i.WT588DStartPlay))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WT588DStartPlay &rArr; WT588DSendByte &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588DSendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkWaitWifiJoin
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Recv
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
</UL>

<P><STRONG><a name="[df]"></a>WT588DStopPlay</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, wt588d.o(i.WT588DStopPlay))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WT588DStopPlay &rArr; WT588DSendByte &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588DSendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
</UL>

<P><STRONG><a name="[92]"></a>WifiCloseTCPLink</STRONG> (Thumb, 56 bytes, Stack size 264 bytes, wifi.o(i.WifiCloseTCPLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = WifiCloseTCPLink &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiWaitResp
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSend
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCloseLink
</UL>

<P><STRONG><a name="[94]"></a>WifiCreateTCPLink</STRONG> (Thumb, 100 bytes, Stack size 272 bytes, wifi.o(i.WifiCreateTCPLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = WifiCreateTCPLink &rArr; WifiIsMutexLink &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiWaitResp
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSend
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiIsMutexLink
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCreateLink
</UL>

<P><STRONG><a name="[104]"></a>WifiGetAp</STRONG> (Thumb, 124 bytes, Stack size 272 bytes, wifi.o(i.WifiGetAp))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = WifiGetAp &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiWaitResp
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSend
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiJoinAp
</UL>

<P><STRONG><a name="[c2]"></a>WifiGetIP</STRONG> (Thumb, 92 bytes, Stack size 272 bytes, wifi.o(i.WifiGetIP))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = WifiGetIP &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiWaitResp
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSend
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkReportNetInfo
</UL>

<P><STRONG><a name="[c3]"></a>WifiGetRssiAndMac</STRONG> (Thumb, 146 bytes, Stack size 280 bytes, wifi.o(i.WifiGetRssiAndMac))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = WifiGetRssiAndMac &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiWaitResp
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSend
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkReportNetInfo
</UL>

<P><STRONG><a name="[b2]"></a>WifiGetSmartLink</STRONG> (Thumb, 150 bytes, Stack size 56 bytes, wifi.o(i.WifiGetSmartLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = WifiGetSmartLink &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
</UL>

<P><STRONG><a name="[ab]"></a>WifiGetTCPLinkStatus</STRONG> (Thumb, 92 bytes, Stack size 272 bytes, wifi.o(i.WifiGetTCPLinkStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = WifiGetTCPLinkStatus &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiWaitResp
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSend
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkGetLinkInfo
</UL>

<P><STRONG><a name="[105]"></a>WifiInit</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, wifi.o(i.WifiInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = WifiInit &rArr; WifiSetMode &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_dir
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[103]"></a>WifiIsMutexLink</STRONG> (Thumb, 82 bytes, Stack size 264 bytes, wifi.o(i.WifiIsMutexLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = WifiIsMutexLink &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiWaitResp
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSend
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiCreateTCPLink
</UL>

<P><STRONG><a name="[b5]"></a>WifiJoinAp</STRONG> (Thumb, 98 bytes, Stack size 304 bytes, wifi.o(i.WifiJoinAp))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = WifiJoinAp &rArr; WifiGetAp &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSend
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetAp
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
</UL>

<P><STRONG><a name="[b0]"></a>WifiOpenSmartLink</STRONG> (Thumb, 64 bytes, Stack size 264 bytes, wifi.o(i.WifiOpenSmartLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = WifiOpenSmartLink &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiWaitResp
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSend
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
</UL>

<P><STRONG><a name="[9b]"></a>WifiRectNetData</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, wifi.o(i.WifiRectNetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = WifiRectNetData &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDataParse
</UL>

<P><STRONG><a name="[cd]"></a>WifiRecv</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, wifi.o(i.WifiRecv))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkWaitWifiJoin
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiWaitResp
</UL>

<P><STRONG><a name="[8c]"></a>WifiResetModule</STRONG> (Thumb, 80 bytes, Stack size 272 bytes, wifi.o(i.WifiResetModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = WifiResetModule &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiWaitResp
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSend
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCheckHeart
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[101]"></a>WifiSend</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wifi.o(i.WifiSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WifiSend
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_send
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiResetModule
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetMutexLink
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSendTCPData
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiOpenSmartLink
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiJoinAp
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetTCPLinkStatus
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetRssiAndMac
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetIP
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiCreateTCPLink
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiCloseTCPLink
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetMode
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiIsMutexLink
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetAp
</UL>

<P><STRONG><a name="[ca]"></a>WifiSendTCPData</STRONG> (Thumb, 100 bytes, Stack size 280 bytes, wifi.o(i.WifiSendTCPData))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = WifiSendTCPData &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiWaitResp
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSend
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSend
</UL>

<P><STRONG><a name="[107]"></a>WifiSetMode</STRONG> (Thumb, 84 bytes, Stack size 528 bytes, wifi.o(i.WifiSetMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = WifiSetMode &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiWaitResp
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSend
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInit
</UL>

<P><STRONG><a name="[b7]"></a>WifiSetMutexLink</STRONG> (Thumb, 54 bytes, Stack size 264 bytes, wifi.o(i.WifiSetMutexLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = WifiSetMutexLink &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiWaitResp
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSend
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
</UL>

<P><STRONG><a name="[102]"></a>WifiWaitResp</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, wifi.o(i.WifiWaitResp))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiRecv
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiResetModule
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetMutexLink
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSendTCPData
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiOpenSmartLink
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetTCPLinkStatus
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetRssiAndMac
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetIP
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiCreateTCPLink
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiCloseTCPLink
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetMode
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiIsMutexLink
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetAp
</UL>

<P><STRONG><a name="[109]"></a>__0printf</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[13b]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[66]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealHeartRspData
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoInit
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoCheckDevID
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Recv
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellShowHelp
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SheelDealID
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
</UL>

<P><STRONG><a name="[13c]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[13d]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[10b]"></a>__0sprintf</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[13e]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[86]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkWarnDataCreate
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkUpdateDataCreate
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkLoginDataCreate
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_string_ptr
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_number
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiResetModule
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendHeart
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Recv
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoGetSystemID
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetMutexLink
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSendTCPData
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiOpenSmartLink
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiJoinAp
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetTCPLinkStatus
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetRssiAndMac
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetIP
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiCreateTCPLink
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiCloseTCPLink
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetMode
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiIsMutexLink
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetAp
</UL>

<P><STRONG><a name="[13f]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[140]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[4e]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[6f]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, system_lpc112x.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealHeartRspData
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_value
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyStaSwitch
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_interrupt
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDHandler
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOpen
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[141]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[142]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[143]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[144]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[111]"></a>cJSON_AddItemToArray</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, json.o(i.cJSON_AddItemToArray))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_AddItemToObject
</UL>

<P><STRONG><a name="[c5]"></a>cJSON_AddItemToObject</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, json.o(i.cJSON_AddItemToObject))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = cJSON_AddItemToObject &rArr; cJSON_strdup
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_AddItemToArray
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_strdup
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkReportNetInfo
</UL>

<P><STRONG><a name="[c1]"></a>cJSON_CreateObject</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, json.o(i.cJSON_CreateObject))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cJSON_CreateObject &rArr; cJSON_New_Item
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_New_Item
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkReportNetInfo
</UL>

<P><STRONG><a name="[c4]"></a>cJSON_CreateString</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, json.o(i.cJSON_CreateString))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = cJSON_CreateString &rArr; cJSON_strdup
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_strdup
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_New_Item
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkReportNetInfo
</UL>

<P><STRONG><a name="[c7]"></a>cJSON_Delete</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, json.o(i.cJSON_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = cJSON_Delete &rArr;  cJSON_Delete (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkReportNetInfo
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_Delete
</UL>

<P><STRONG><a name="[c6]"></a>cJSON_PrintUnformatted</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, json.o(i.cJSON_PrintUnformatted))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = cJSON_PrintUnformatted &rArr; print_value &rArr; print_number &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_value
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkReportNetInfo
</UL>

<P><STRONG><a name="[f0]"></a>ct16b1_timer_init</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, timer.o(i.ct16b1_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ct16b1_timer_init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTimerInit
</UL>

<P><STRONG><a name="[67]"></a>delay_ms</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, delay.o(i.delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkWaitWifiJoin
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiResetModule
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInit
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendHeart
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendWarn
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
</UL>

<P><STRONG><a name="[116]"></a>floor</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, floor.o(i.floor))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_number
</UL>

<P><STRONG><a name="[2d]"></a>fputc</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_send_byte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[30]"></a>free</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkReportNetInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> json.o(.data)
</UL>
<P><STRONG><a name="[63]"></a>gpio_clear_interrupt</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gpio.o(i.gpio_clear_interrupt))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_IRQHandler
</UL>

<P><STRONG><a name="[59]"></a>gpio_enable_interrupt</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gpio.o(i.gpio_enable_interrupt))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoorMagnetInit
</UL>

<P><STRONG><a name="[5e]"></a>gpio_get_bitval</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(i.gpio_get_bitval))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PirCheck
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoorMagnetRecv
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashRWBytes
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf433Get
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RxBit
</UL>

<P><STRONG><a name="[62]"></a>gpio_get_intstatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(i.gpio_get_intstatus))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_IRQHandler
</UL>

<P><STRONG><a name="[73]"></a>gpio_set_bitval</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gpio.o(i.gpio_set_bitval))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_set_bitval
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashInit
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PirInit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteAPage
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashReadID
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashIsBusy
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteControl
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashRWBytes
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfTx
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Send
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDClose
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDHandler
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashReadData
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOpen
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588DSendByte
</UL>

<P><STRONG><a name="[57]"></a>gpio_set_dir</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio.o(i.gpio_set_dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_set_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInit
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588DInit
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashInit
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PirInit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDInit
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInit
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoorMagnetInit
</UL>

<P><STRONG><a name="[58]"></a>gpio_set_interrupt</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, gpio.o(i.gpio_set_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpio_set_interrupt &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoorMagnetInit
</UL>

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 212 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1516<LI>Call Chain = main &rArr; NetWorkInit &rArr; NetWorkRecv &rArr; NetWorkDealHeartRspData &rArr; NetWorkDealAppUpdate &rArr; NetWorkSendWarn &rArr; NetWorkCreateLink &rArr; NetWorkGetLinkInfo &rArr; WifiGetTCPLinkStatus &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiResetModule
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInit
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588DStartPlay
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588DInit
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashInit
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoSetVersion
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTimerInit
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoLockIDIsNull
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoInit
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoCheckDevID
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdRecv
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PirInit
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PirCheck
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendHeart
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkRecv
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCheckHeart
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Recv
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDInit
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyListened
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInit
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoorMagnetRecv
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoorMagnetInit
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[2f]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> json.o(.data)
</UL>
<P><STRONG><a name="[56]"></a>syscon_ahb_enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, syscon.o(i.syscon_ahb_enable))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInit
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588DInit
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashInit
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PirInit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDInit
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInit
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoorMagnetInit
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ct16b1_timer_init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
</UL>

<P><STRONG><a name="[122]"></a>syscon_pd_on</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, syscon.o(i.syscon_pd_on))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
</UL>

<P><STRONG><a name="[11f]"></a>syscon_uart0_div</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, syscon.o(i.syscon_uart0_div))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[123]"></a>syscon_wdt_clk_update</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, syscon.o(i.syscon_wdt_clk_update))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
</UL>

<P><STRONG><a name="[124]"></a>syscon_wdt_div</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, syscon.o(i.syscon_wdt_div))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
</UL>

<P><STRONG><a name="[121]"></a>syscon_wdt_osc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, syscon.o(i.syscon_wdt_osc))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
</UL>

<P><STRONG><a name="[ef]"></a>systick_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, systick.o(i.systick_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = systick_init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTimerInit
</UL>

<P><STRONG><a name="[118]"></a>uart0_init</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, uart.o(i.uart0_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = uart0_init &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_uart0_div
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[117]"></a>uart0_send_byte</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.uart0_send_byte))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[106]"></a>uart2_init</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, uart.o(i.uart2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = uart2_init &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInit
</UL>

<P><STRONG><a name="[108]"></a>uart2_send</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, uart.o(i.uart2_send))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSend
</UL>

<P><STRONG><a name="[9e]"></a>wdt_feed</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wdt.o(i.wdt_feed))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkWaitWifiJoin
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoCheckDevID
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendHeart
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rf433Get
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendWarn
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkReportResetFlag
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiWaitResp
</UL>

<P><STRONG><a name="[119]"></a>wdt_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, wdt.o(i.wdt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wdt_init
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_ahb_enable
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_wdt_osc
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_wdt_div
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_wdt_clk_update
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscon_pd_on
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[68]"></a>NVIC_SystemReset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(i.NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[112]"></a>cJSON_New_Item</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, json.o(i.cJSON_New_Item))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = cJSON_New_Item
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_CreateString
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_CreateObject
</UL>

<P><STRONG><a name="[110]"></a>cJSON_strdup</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, json.o(i.cJSON_strdup))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cJSON_strdup
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_CreateString
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_AddItemToObject
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_value
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_string_ptr
</UL>

<P><STRONG><a name="[11a]"></a>print_array</STRONG> (Thumb, 302 bytes, Stack size 48 bytes, json.o(i.print_array))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = print_array &rArr;  print_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_value
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_value
</UL>

<P><STRONG><a name="[11b]"></a>print_number</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, json.o(i.print_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = print_number &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_value
</UL>

<P><STRONG><a name="[11d]"></a>print_object</STRONG> (Thumb, 582 bytes, Stack size 72 bytes, json.o(i.print_object))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + In Cycle
<LI>Call Chain = print_object &rArr;  print_value (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_value
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_string_ptr
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_value
</UL>

<P><STRONG><a name="[11e]"></a>print_string_ptr</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, json.o(i.print_string_ptr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = print_string_ptr &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_strdup
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_value
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_object
</UL>

<P><STRONG><a name="[113]"></a>print_value</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, json.o(i.print_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = print_value &rArr; print_number &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_string_ptr
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_object
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_number
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_array
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_strdup
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_PrintUnformatted
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_object
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_array
</UL>

<P><STRONG><a name="[8d]"></a>NVIC_SystemReset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, network.o(i.NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkWaitWifiJoin
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealHeartRspData
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCheckHeart
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
</UL>

<P><STRONG><a name="[a4]"></a>NetWorkDealHeartRspData</STRONG> (Thumb, 240 bytes, Stack size 56 bytes, network.o(i.NetWorkDealHeartRspData))
<BR><BR>[Stack]<UL><LI>Max Depth = 1268<LI>Call Chain = NetWorkDealHeartRspData &rArr; NetWorkDealAppUpdate &rArr; NetWorkSendWarn &rArr; NetWorkCreateLink &rArr; NetWorkGetLinkInfo &rArr; WifiGetTCPLinkStatus &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoLockIDIsNull
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoReset
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoPwdSave
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoMcSave
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoMcGet
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoBfSave
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315WarnCancel
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Warn
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Open
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Close
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lock315Assoc
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkCtlTypeParse
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkRecv
</UL>

<P><STRONG><a name="[bc]"></a>NetWorkLoginDataCreate</STRONG> (Thumb, 190 bytes, Stack size 240 bytes, network.o(i.NetWorkLoginDataCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = NetWorkLoginDataCreate &rArr; UpdateInfoGet &rArr; W25qFlashReadData &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoLockIDIsNull
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateInfoGet
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoIDGet
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkLogin
</UL>

<P><STRONG><a name="[bb]"></a>NetWorkReportNetInfo</STRONG> (Thumb, 168 bytes, Stack size 152 bytes, network.o(i.NetWorkReportNetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 956<LI>Call Chain = NetWorkReportNetInfo &rArr; NetWorkSendWarn &rArr; NetWorkCreateLink &rArr; NetWorkGetLinkInfo &rArr; WifiGetTCPLinkStatus &rArr; WifiWaitResp &rArr; WifiRecv &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInfoSplitNameAndPwd
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_PrintUnformatted
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_Delete
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_CreateString
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_CreateObject
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cJSON_AddItemToObject
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetRssiAndMac
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGetIP
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoWifiGet
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendWarn
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
</UL>

<P><STRONG><a name="[9f]"></a>NetWorkUpdateDataCreate</STRONG> (Thumb, 84 bytes, Stack size 144 bytes, network.o(i.NetWorkUpdateDataCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = NetWorkUpdateDataCreate &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkDealAppUpdate
</UL>

<P><STRONG><a name="[b6]"></a>NetWorkWaitWifiJoin</STRONG> (Thumb, 92 bytes, Stack size 144 bytes, network.o(i.NetWorkWaitWifiJoin))
<BR><BR>[Stack]<UL><LI>Max Depth = 1224<LI>Call Chain = NetWorkWaitWifiJoin &rArr; ShellCmdRecv &rArr; ShellCmdParse &rArr; ShellShowHelp &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588DStartPlay
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdRecv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyListened
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiRecv
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
</UL>

<P><STRONG><a name="[cc]"></a>NetWorkWarnDataCreate</STRONG> (Thumb, 98 bytes, Stack size 176 bytes, network.o(i.NetWorkWarnDataCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = NetWorkWarnDataCreate &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoIDGet
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkSendWarn
</UL>

<P><STRONG><a name="[b4]"></a>WifiInfoSplitNameAndPwd</STRONG> (Thumb, 72 bytes, Stack size 80 bytes, network.o(i.WifiInfoSplitNameAndPwd))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WifiInfoSplitNameAndPwd
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkReportNetInfo
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetWorkInit
</UL>

<P><STRONG><a name="[dc]"></a>NVIC_SystemReset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, shell.o(i.NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SheelDealID
</UL>

<P><STRONG><a name="[da]"></a>SheelDealID</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, shell.o(i.SheelDealID))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SheelDealID &rArr; SysInfoIDSave &rArr; W25qFlashWriteData &rArr; W25qFlashWriteAPage &rArr; W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoIDSave
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
</UL>

<P><STRONG><a name="[de]"></a>ShellShowHelp</STRONG> (Thumb, 58 bytes, Stack size 1032 bytes, shell.o(i.ShellShowHelp))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056<LI>Call Chain = ShellShowHelp &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShellCmdParse
</UL>

<P><STRONG><a name="[e6]"></a>SysInfoGetSystemID</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, sysinfo.o(i.SysInfoGetSystemID))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SysInfoGetSystemID &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoIsValidID
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoInit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoDefault
</UL>

<P><STRONG><a name="[e7]"></a>SysInfoIsValidID</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, sysinfo.o(i.SysInfoIsValidID))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInfoGetSystemID
</UL>

<P><STRONG><a name="[5f]"></a>Rf433Get</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, doormagnet.o(i.Rf433Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Rf433Get
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_bitval
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoorMagnetRecv
</UL>

<P><STRONG><a name="[f8]"></a>W25qFlashRWBytes</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, w25qflash.o(i.W25qFlashRWBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_bitval
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteAPage
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashReadID
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashIsBusy
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteControl
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashReadData
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
</UL>

<P><STRONG><a name="[f6]"></a>W25qFlashWaitIdle</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, w25qflash.o(i.W25qFlashWaitIdle))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = W25qFlashWaitIdle &rArr; W25qFlashIsBusy &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashIsBusy
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteAPage
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashReadData
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
</UL>

<P><STRONG><a name="[f7]"></a>W25qFlashWriteControl</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, w25qflash.o(i.W25qFlashWriteControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = W25qFlashWriteControl &rArr; W25qFlashRWBytes &rArr; gpio_set_bitval
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashRWBytes
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_bitval
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashWriteAPage
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25qFlashEraseSector
</UL>

<P><STRONG><a name="[f4]"></a>WifiIntDealAtRspData</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, wifi.o(i.WifiIntDealAtRspData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WifiIntDealAtRspData
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[f3]"></a>WifiIntDealNetData</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, wifi.o(i.WifiIntDealNetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WifiIntDealNetData
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[f2]"></a>WifiIntDealSmartLink</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, wifi.o(i.WifiIntDealSmartLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WifiIntDealSmartLink
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[100]"></a>WT588DDelay200us</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wt588d.o(i.WT588DDelay200us))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588DSendByte
</UL>

<P><STRONG><a name="[ff]"></a>WT588DDelay600us</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, wt588d.o(i.WT588DDelay600us))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WT588DSendByte
</UL>

<P><STRONG><a name="[114]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timer.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ct16b1_timer_init
</UL>

<P><STRONG><a name="[115]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, timer.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ct16b1_timer_init
</UL>

<P><STRONG><a name="[120]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, uart.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
</UL>

<P><STRONG><a name="[10c]"></a>_fp_digits</STRONG> (Thumb, 316 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[10a]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[10f]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[10e]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2e]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL>
<P><STRONG><a name="[2b]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[52]"></a>_scanf_longlong</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[51]"></a>_scanf_real</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[53]"></a>_scanf_string</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<HR></body></html>
